{"version":3,"sources":["reducers/galleryReducers.js","components/Loader/Loader.js","components/Menu/Menu.js","components/Gallery/Gallery.js","actions/galleryActions.js","components/Lightbox/Lightbox.js","components/Main/Main.js","App.js","index.js"],"names":["INITIAL_STATE","photos","currentAlbumId","galleryReducers","state","action","type","albumId","Loader","className","Menu","data","isAlbum","location","useLocation","useState","window","innerWidth","widthWindow","setWidthWindow","isOpenBurger","setIsOpenBurger","isPhotosLoaded","setIsPhotosLoaded","currentUserId","pathname","split","useEffect","addEventListener","role","onClick","length","to","map","el","index","onLoad","src","cover","alt","activeClassName","id","name","title","defaultProps","connect","Gallery","isLast","setIsLast","photo","thumbnailUrl","galleryActions","dispatch","addPhotos","Lightbox","url","setUrl","history","useHistory","currentIdPhoto","Number","currentPhoto","find","push","slice","join","String","disabled","Main","dataMenu","setDataMenu","setIsAlbum","splitLocation","a","includes","axios","get","users","pathToAlbums","albums","filledAlbums","album","Promise","all","then","results","pathToPhotos","console","error","exact","path","App","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b66921e5.chunk.js","sourcesContent":["const INITIAL_STATE = {\n  photos: [],\n  currentAlbumId: 0,\n};\n\nconst galleryReducers = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case 'ADD_PHOTOS':\n      return {\n        ...state,\n        photos: action.photos,\n        currentAlbumId: action.photos[0] ? action.photos[0].albumId : 0,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default galleryReducers;\n","import React from 'react';\nimport './Loader.css';\n\nconst Loader = () => <div className=\"loader\" />;\n\nexport default Loader;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { NavLink, useLocation, Link } from 'react-router-dom';\nimport './Menu.scss';\nimport Loader from '../Loader/Loader';\n\nconst Menu = ({ data, isAlbum }) => {\n  const location = useLocation();\n  const [widthWindow, setWidthWindow] = useState(window.innerWidth);\n  const [isOpenBurger, setIsOpenBurger] = useState(false);\n  const [isPhotosLoaded, setIsPhotosLoaded] = useState(false);\n  const currentUserId = location.pathname.split('/')[2];\n\n  useEffect(() => {\n    window.addEventListener('resize', () => {\n      setWidthWindow(window.innerWidth);\n    });\n  }, []);\n\n  useEffect(() => {\n    setIsPhotosLoaded(false);\n  }, [currentUserId]);\n\n  const renderBurgerMenu = () => (\n    <div\n      role=\"presentation\"\n      onClick={() => setIsOpenBurger(!isOpenBurger)}\n      className={`menu-btn ${isOpenBurger ? 'menu-btn_open' : ''}`}\n    >\n      <div className=\"menu-btn__burger\" />\n    </div>\n  );\n\n  const renderList = () => {\n    if (data.length > 0) {\n      return (\n        <>\n          { isAlbum ? <Link to=\"/users\" className=\"menu__button\">‚Üê</Link> : null }\n          {isAlbum && !isPhotosLoaded ? <Loader /> : null}\n          <div className={`menu__list ${isAlbum && !isPhotosLoaded ? 'menu__list_empty' : ''}`}>\n            <ul>\n              {\n                data.map((el, index) => (\n                  <li key={el.id}>\n                    {isAlbum ? <img onLoad={() => (index === data.length - 1 ? setIsPhotosLoaded(true) : null)} className=\"menu__cover\" src={el.cover} alt=\"Cover of album\" /> : null}\n                    <NavLink\n                      onClick={() => (isOpenBurger && isAlbum ? setIsOpenBurger(false) : null)}\n                      activeClassName=\"menu__link_active\"\n                      className=\"menu__link\"\n                      to={isAlbum ? `/users/${currentUserId}/albums/${el.id}/photos` : `/users/${el.id}/albums`}\n                    >{el.name || `${el.title} (${el.length})`}\n                    </NavLink>\n                    <hr />\n                  </li>\n                ))\n              }\n            </ul>\n          </div>\n        </>\n      );\n    }\n    return <Loader />;\n  };\n\n  return (\n    <nav className={`menu ${isOpenBurger ? 'menu_full' : ''}`}>\n      {\n        widthWindow <= 768 ? renderBurgerMenu() : null\n      }\n      {\n        widthWindow > 768 || isOpenBurger ? renderList() : null\n      }\n    </nav>\n  );\n};\n\nMenu.defaultProps = {\n  data: [],\n  isAlbum: false,\n};\n\nMenu.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object),\n  isAlbum: PropTypes.bool,\n};\n\nexport default connect()(Menu);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './Gallery.scss';\nimport { Link, useLocation } from 'react-router-dom';\nimport Loader from '../Loader/Loader';\n\nconst mapStateToProps = (state) => ({\n  photos: state.photos,\n  currentAlbumId: state.currentAlbumId,\n});\n\nconst Gallery = ({\n  photos, currentAlbumId,\n}) => {\n  const [isLast, setIsLast] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    setIsLast(false);\n  }, [currentAlbumId]);\n\n  return (\n    <div className=\"gallery\">\n      {!isLast ? <Loader /> : null}\n      <ul className={`gallery__list ${!isLast ? 'gallery__list_empty' : ''}`}>\n        {\n          photos.length > 0 ? photos.map((photo, index) => (\n            <li key={photo.id}>\n              <Link to={`${location.pathname}/fullscreen/${photo.id}`}>\n                <img\n                  className=\"gallery__photo\"\n                  onLoad={() => (index === photos.length - 1 ? setIsLast(true) : null)}\n                  src={photo.thumbnailUrl}\n                  alt={photo.id}\n                />\n              </Link>\n            </li>\n          )) : null\n        }\n      </ul>\n    </div>\n  );\n};\n\nGallery.defaultProps = {\n  photos: [],\n  currentAlbumId: 0,\n};\n\nGallery.propTypes = {\n  photos: PropTypes.arrayOf(PropTypes.object),\n  currentAlbumId: PropTypes.number,\n};\n\nexport default connect(mapStateToProps)(Gallery);\n","const galleryActions = (dispatch) => ({\n  addPhotos: (photos) => dispatch({ type: 'ADD_PHOTOS', photos }),\n});\n\nexport default galleryActions;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport './Lightbox.scss';\nimport PropTypes from 'prop-types';\n\nconst mapStateToProps = (state) => ({\n  photos: state.photos,\n});\n\nconst Lightbox = ({ photos }) => {\n  const [url, setUrl] = useState('');\n  const location = useLocation().pathname.split('/');\n  const history = useHistory();\n  let currentIdPhoto = Number(location[location.length - 1]);\n\n  useEffect(() => {\n    if (photos.length > 0) {\n      const currentPhoto = photos.find((photo) => photo.id === currentIdPhoto);\n      setUrl(currentPhoto.url);\n    }\n  }, [photos, currentIdPhoto]);\n\n  return (\n    <div className=\"lightbox\">\n      <div className=\"lightbox__buttons\">\n        <button onClick={() => history.push(location.slice(0, 6).join('/'))} type=\"button\" className=\"lightbox__button lightbox__button_close\">√ó</button>\n        <button\n          onClick={() => {\n            currentIdPhoto += 1;\n            history.push(String(currentIdPhoto));\n          }}\n          type=\"button\"\n          className=\"lightbox__button lightbox__button_next\"\n          disabled={photos.length > 0 ? currentIdPhoto === photos[photos.length - 1].id : false}\n        >‚Üí\n        </button>\n        <button\n          onClick={() => {\n            currentIdPhoto -= 1;\n            history.push(String(currentIdPhoto));\n          }}\n          type=\"button\"\n          className=\"lightbox__button lightbox__button_prev\"\n          disabled={photos.length > 0 ? currentIdPhoto === photos[0].id : false}\n        >‚Üê\n        </button>\n      </div>\n      <div className=\"lightbox__content\">\n        {url.length > 0 ? <img alt=\"\" src={url} /> : null}\n      </div>\n    </div>\n  );\n};\n\nLightbox.defaultProps = {\n  photos: [],\n};\n\nLightbox.propTypes = {\n  photos: PropTypes.oneOfType(PropTypes.array, PropTypes.object),\n};\n\nexport default connect(mapStateToProps)(Lightbox);\n","import React, { useEffect, useState } from 'react';\nimport {\n  Route,\n  useLocation,\n} from 'react-router-dom';\nimport './Main.scss';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Menu from '../Menu/Menu';\nimport Gallery from '../Gallery/Gallery';\nimport galleryActions from '../../actions/galleryActions';\nimport Lightbox from '../Lightbox/Lightbox';\n\nconst url = 'https://jsonplaceholder.typicode.com';\n\nconst Main = ({ dispatch }) => {\n  const [dataMenu, setDataMenu] = useState([]);\n  const [isAlbum, setIsAlbum] = useState(false);\n  const location = useLocation();\n  const splitLocation = location.pathname.split('/');\n\n  useEffect(async () => {\n    setIsAlbum(location.pathname.includes('albums'));\n    try {\n      if (location.pathname === '/' || location.pathname === '/users') {\n        const users = await axios.get(`${url}/users`);\n        setDataMenu(users.data);\n      }\n      if (location.pathname.includes('albums')) {\n        const pathToAlbums = `${splitLocation.slice(0, 4).join('/')}`;\n        const albums = await axios.get(`${url}${pathToAlbums}`);\n        const filledAlbums = albums.data.map(async (album) => {\n          const photos = await axios.get(`${url}/albums/${album.id}/photos`);\n          return { ...album, length: photos.data.length, cover: photos.data[0].thumbnailUrl };\n        });\n        Promise.all(filledAlbums).then((results) => {\n          setDataMenu(results);\n        });\n      }\n      if (location.pathname.includes('photos')) {\n        const pathToPhotos = `${splitLocation.slice(3, 6).join('/')}`;\n        const photos = await axios.get(`${url}/${pathToPhotos}`);\n        galleryActions(dispatch).addPhotos(photos.data);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }, [location]);\n\n  return (\n    <div className=\"main\">\n      <Menu data={dataMenu} isAlbum={isAlbum} />\n      <Route exact path={['/', '/users', '/users/:id/albums']}>\n        <div className=\"placeholder\">\n          <span>–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –∏–∑ –º–µ–Ω—é</span>\n        </div>\n      </Route>\n      <Route path=\"/users/:id/albums/:id/photos\">\n        <Gallery />\n      </Route>\n      <Route path=\"/users/:id/albums/:id/photos/fullscreen/:id\">\n        <Lightbox />\n      </Route>\n    </div>\n  );\n};\n\nMain.defaultProps = {\n  dispatch: () => {},\n};\n\nMain.propTypes = {\n  dispatch: PropTypes.func,\n};\n\nexport default connect()(Main);\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n} from 'react-router-dom';\nimport Main from './components/Main/Main';\n\nconst App = () => (\n  <Router>\n    <Route path=\"/\">\n      <Main />\n    </Route>\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport galleryReducers from './reducers/galleryReducers';\nimport 'normalize.css';\nimport './index.scss';\nimport App from './App';\n\nconst store = createStore(galleryReducers);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}